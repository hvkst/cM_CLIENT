# name: build & deploy
# on:
#   push:
#     branches:
#       - main
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - name: Setup Node
#         uses: actions/setup-node@v1
#         with:
#           node-version: 12.x
#       - name: Cache Node Modules
#         id: cache-node-modules
#         uses: actions/cache@v3
#         with:
#           path: node_modules
#           key: node-modules-${{ hashFiles('package-lock.json') }}
#       - name: Install Dependencies
#         if: steps.cache.outputs.cache-hit != 'true'
#         run: npm install
#   deploy:
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3.2.0
#       - name: rsync deployments
#         uses: burnett01/rsync-deployments@5.2.1
#         with:
#           switches: -avzr --delete
#           path: ./build/
#           remote_path: /home/${{ secrets.UBERSPACE_USER }}/finalserver/
#           remote_host: ${{ secrets.UBERSPACE_HOST }}
#           remote_user: ${{ secrets.UBERSPACE_USER }}
#           remote_key: ${{ secrets.DEPLOY_KEY_PRIVATE }}
name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
